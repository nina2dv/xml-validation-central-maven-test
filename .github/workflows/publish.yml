name: publish artifacts
on:
  push:
    tags: ['v*']           # tag format: v1.2.3
  workflow_dispatch: {}     # allow manual run if needed

permissions:
  contents: write           # required if you create a GitHub Release below

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: v
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Set up Java & Maven (Central + GPG)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          server-id: central
          server-username: ${{ secrets.CENTRAL_USERNAME }}
          server-password: ${{ secrets.CENTRAL_PASSWORD }}
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}

#      - name: Inspect Maven settings (redacted)
#        run: |
#          echo "== ~/.m2/settings.xml =="
#          sed -E 's@(<username>).*?(</username>)@\1***\2@; s@(<password>).*?(</password>)@\1***\2@' ~/.m2/settings.xml | head -n 120
#
#      - name: Verify Central token (Bearer)
#        env:
#          CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
#          CENTRAL_PASSWORD: ${{ secrets.CENTRAL_PASSWORD }}
#        run: |
#          TOK=$(printf "%s:%s" "$CENTRAL_USERNAME" "$CENTRAL_PASSWORD" | base64 -w0 || printf "%s:%s" "$CENTRAL_USERNAME" "$CENTRAL_PASSWORD" | base64)
#          # A 'status' call needs an id, so we intentionally call a harmless endpoint that still checks auth:
#          curl -sS -I -H "Authorization: Bearer $TOK" https://central.sonatype.com/api/v1/publisher/status || true

      - name: GPG can sign non-interactively
        env:
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gpg --list-secret-keys --keyid-format LONG
          echo ok > /tmp/t.txt
          gpg --batch --yes --pinentry-mode loopback \
              --passphrase "$GPG_PASSPHRASE" -ab /tmp/t.txt

      - name: Set POM version from tag
        run: mvn -B -ntp versions:set -DnewVersion=${{ steps.v.outputs.VERSION }} -DgenerateBackupPoms=false -DprocessAllModules=true

      - name: Must not be a SNAPSHOT
        run: |
          VER=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
          if [[ "$VER" == *-SNAPSHOT ]]; then echo "SNAPSHOT not allowed in release"; exit 1; fi

      - name: Build, sign, and publish
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          mvn -Pdeployment -B -ntp \
            -Dgpg.keyname=${{ secrets.GPG_KEY_FPR }} \
            clean deploy
      

      # (Optional) Create a GitHub Release page for convenience
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
