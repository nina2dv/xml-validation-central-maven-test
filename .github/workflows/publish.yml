name: publish artifacts
on:
  push:
    tags: ['v*']            # tag format: v1.2.3
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract version from tag
        id: v
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> "$GITHUB_OUTPUT"

      - name: Set up Java & Maven (Central + GPG)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          # Write placeholders that reference env vars (resolved at mvn run time)
          server-id: central
          server-username: MAVEN_USERNAME         # <-- placeholder
          server-password: MAVEN_CENTRAL_TOKEN    # <-- placeholder
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE    # <-- placeholder

      # Optional sanity check (redacted)
      # - name: Inspect Maven settings (redacted)
      #   run: |
      #     sed -E 's@(<username>).*?(</username>)@\1***\2@; s@(<password>).*?(</password>)@\1***\2@' ~/.m2/settings.xml | head -n 120

      - name: GPG can sign non-interactively
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}   # must match placeholder above
        run: |
          gpg --list-secret-keys --keyid-format LONG
          echo ok > /tmp/t.txt
          gpg --batch --yes --pinentry-mode loopback \
            --passphrase "$MAVEN_GPG_PASSPHRASE" -ab /tmp/t.txt

      - name: Set POM version from tag
        run: mvn -B -ntp versions:set -DnewVersion=${{ steps.v.outputs.VERSION }} -DgenerateBackupPoms=false -DprocessAllModules=true

      - name: Must not be a SNAPSHOT
        run: |
          VER=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
          if [[ "$VER" == *-SNAPSHOT ]]; then echo "SNAPSHOT not allowed in release"; exit 1; fi

      - name: Build, sign, and publish
        # Provide env vars that the settings.xml placeholders will read
        env:
          MAVEN_USERNAME:         ${{ secrets.CENTRAL_USERNAME }}        # Central User Token username
          MAVEN_CENTRAL_TOKEN:    ${{ secrets.CENTRAL_PASSWORD }}        # Central User Token password
          MAVEN_GPG_PASSPHRASE:   ${{ secrets.GPG_PASSPHRASE }}          # GPG passphrase
        run: |
          mvn -Pdeployment -B -ntp \
            -Dgpg.keyname='${{ secrets.GPG_KEY_FPR }}' \
            clean deploy

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          generate_release_notes: true
