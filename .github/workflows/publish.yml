name: publish artifacts
on:
  push:
    tags: ['v*']            # tag format: v1.2.3
  workflow_dispatch: {}

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with tags)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Extract "1.2.3" from tag "v1.2.3", store as step output and job env
      - name: Extract version from tag
        id: v
        run: |
          VERSION="${GITHUB_REF_NAME#v}"
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"

      - name: Set up Java & Maven (Central + GPG)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven
          server-id: central
          server-username: MAVEN_USERNAME         # env placeholder
          server-password: MAVEN_CENTRAL_TOKEN    # env placeholder
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE    # env placeholder

      - name: GPG can sign non-interactively
        env:
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          gpg --list-secret-keys --keyid-format LONG
          echo ok > /tmp/t.txt
          gpg --batch --yes --pinentry-mode loopback \
            --passphrase "$MAVEN_GPG_PASSPHRASE" -ab /tmp/t.txt

      - name: Set POM version from tag
        run: mvn -B -ntp versions:set -DnewVersion="${{ env.VERSION }}" -DgenerateBackupPoms=false -DprocessAllModules=true

      - name: Must not be a SNAPSHOT
        run: |
          VER=$(mvn -q -DforceStdout help:evaluate -Dexpression=project.version)
          if [[ "$VER" == *-SNAPSHOT ]]; then echo "SNAPSHOT not allowed in release"; exit 1; fi

      - name: Build, sign, and publish
        env:
          MAVEN_USERNAME:       ${{ secrets.CENTRAL_USERNAME }}   # Central User Token username
          MAVEN_CENTRAL_TOKEN:  ${{ secrets.CENTRAL_PASSWORD }}   # Central User Token password
          MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}     # GPG passphrase
        run: |
          mvn -Pdeployment -B -ntp \
            -Dgpg.keyname='${{ secrets.GPG_KEY_FPR }}' \
            clean deploy

      - name: Collect release assets
        run: |
          mkdir -p release-assets
          cp target/*-sources.jar release-assets/ || true
          cp target/*-javadoc.jar release-assets/ || true
          cp target/*.jar release-assets/
          (cd release-assets && for f in *.jar; do sha256sum "$f" > "$f.sha256"; done)
          cp target/*.asc release-assets/ || true

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body: |
            ## Coordinates
            ```
            <dependency>
              <groupId>io.github.nina2dv</groupId>
              <artifactId>xml-validation-central-maven-test</artifactId>
              <version>${{ env.VERSION }}</version>
            </dependency>
            ```

            ## Whatâ€™s new
            - Auto generated notes below, plus curated highlights:

            ## Checksums
            See attached `*.sha256`.

            ## PGP
            Artifacts are signed with key fingerprint `${{ secrets.GPG_KEY_FPR }}`.

            ## Links
            - Sonatype Central: https://central.sonatype.com/artifact/io.github.nina2dv/xml-validation-central-maven-test/${{ env.VERSION }}
          generate_release_notes: true
          files: |
            release-assets/*
